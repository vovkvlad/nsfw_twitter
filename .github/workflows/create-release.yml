name: Create Release on Version Change

on:
  push:
    branches:
      - master
    paths:
      - 'package.json'

jobs:
  create_release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Get current version
        id: get_version
        run: |
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "NEW_VERSION = $NEW_VERSION"
          echo "NEW_VERSION=$NEW_VERSION" >> "$GITHUB_OUTPUT"
      - name: Compare versions
        id: compare_versions
        run: |
          CURRENT_VERSION=$(echo "${{ steps.get_version.outputs.NEW_VERSION }}")
          echo "CURRENT_VERSION = $CURRENT_VERSION"
          PREVIOUS_VERSION=$(git tag --sort=-creatordate | grep -v -e "$CURRENT_VERSION" | head -n1)
          echo "PREVIOUS_VERSION = $PREVIOUS_VERSION"
          if [[ "$CURRENT_VERSION" != "$PREVIOUS_VERSION" ]]; then echo "TAG=true" >> "$GITHUB_OUTPUT" ; else echo "TAG=false" >> "$GITHUB_OUTPUT" ; fi
      - name: Create Git Tag
        if: steps.compare_versions.outputs.TAG == 'true'
        id: create_tag
        run: |
          TAG_NAME=$(echo "${{ steps.get_version.outputs.NEW_VERSION }}")
          git tag $TAG_NAME
          git push origin $TAG_NAME
      - name: Get commit messages
        if: steps.compare_versions.outputs.TAG == 'true'
        id: get_commit_messages
        run: |
          PREVIOUS_TAG=$(git describe --abbrev=0 --tags $(git rev-list --tags --skip=1 --max-count=1))
          COMMIT_MESSAGES=$(git log --pretty=format:"- %s" $PREVIOUS_TAG..HEAD)
          echo "COMMIT_MESSAGES = $COMMIT_MESSAGES"
          echo "commit_messages=$COMMIT_MESSAGES" >> "$GITHUB_OUTPUT"
      - name: Create GitHub Release
        if: steps.compare_versions.outputs.TAG == 'true'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.NEW_VERSION }}
          release_title: Release ${{ steps.get_version.outputs.NEW_VERSION }}
          body: |
            The following commits were included in this release: ${{ steps.get_commit_messages.outputs.commit_messages }}
